<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:FangJia.Cores.Utils.Converters">
    <!-- ToggleButton Style -->
    <Style x:Key="MenuToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                                Margin="0,5"
                                Padding="5"
                                Height="42"
                                CornerRadius="5">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock x:Name="IconBlock"
                                           Text="{Binding Icon}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontSize="24" FontFamily="{DynamicResource IconFont}"
                                           Width="30"
                                           Margin="0,0,10,0"
                                           TextAlignment="Center"
                                           VerticalAlignment="Center"
                                           ToolTip="{Binding ElementName=TextBlock,Path=Text}">
                                    <!-- Using RenderTransform for scaling -->
                                    <TextBlock.RenderTransform>
                                        <ScaleTransform x:Name="IconScale" ScaleX="1" ScaleY="1" />
                                    </TextBlock.RenderTransform>
                                    <TextBlock.RenderTransformOrigin>
                                        <Point X="0.5" Y="0.5" />
                                        <!-- Center of the element -->
                                    </TextBlock.RenderTransformOrigin>
                                </TextBlock>
                                <TextBlock x:Name="TextBlock"
                                           Text="{Binding Name}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontSize="14" FontWeight="Bold"
                                           Margin="0"
                                           VerticalAlignment="Center">
                                    <!-- Using RenderTransform for translation -->
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="TextTranslate" X="0" Y="0" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </StackPanel>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <!-- Normal State -->
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <!-- Using TranslateTransform for TextBlock margin -->
                                        <DoubleAnimation Storyboard.TargetName="TextTranslate"
                                                         Storyboard.TargetProperty="X"
                                                         Duration="0:0:0.2"
                                                         To="0" />
                                        <!-- Using ScaleTransform for scaling icon and text -->
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         Duration="0:0:0.2"
                                                         To="1" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         Duration="0:0:0.2"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <!-- MouseOver State -->
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <!-- Using TranslateTransform for TextBlock margin -->
                                        <DoubleAnimation Storyboard.TargetName="TextTranslate"
                                                         Storyboard.TargetProperty="X"
                                                         Duration="0:0:0.2"
                                                         To="10" />
                                        <!-- Using ScaleTransform for scaling icon and text -->
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         Duration="0:0:0.2"
                                                         To="1.25" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         Duration="0:0:0.2"
                                                         To="1.25" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <converters:MainMenuListWidthConverter x:Key="MainMenuListWidthConverter" />
    <Style x:Key="SidebarListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <ToggleButton x:Name="MenuItem"
                                      IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Command="{Binding Command}"
                                      Width="{Binding ActualWidth, ElementName=SidebarListBox, Converter={StaticResource MainMenuListWidthConverter}}"
                                      Style="{DynamicResource MenuToggleButtonStyle}" />
                        <!-- Visual State Logic Replaced by Triggers -->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Normal State -->
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="MenuItem" Property="Background" Value="Transparent" />
                            <Setter TargetName="MenuItem" Property="Foreground"
                                    Value="{DynamicResource AccentForegroundBrush}" />
                        </Trigger>
                        <!-- MouseOver State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MenuItem" Property="Background"
                                    Value="{DynamicResource AccentOverlayBrush}" />
                            <Setter TargetName="MenuItem" Property="Foreground"
                                    Value="{DynamicResource AccentForegroundBrush}" />
                        </Trigger>
                        <!-- Selected State -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="MenuItem" Property="Background"
                                    Value="{DynamicResource AccentHighlightBrush}" />
                            <Setter TargetName="MenuItem" Property="Foreground"
                                    Value="{DynamicResource AccentHighlightForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ListBoxItem" x:Key="DataTabListItemStyle" >
        <Setter Property="Foreground"
                Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <ToggleButton x:Name="MenuItem"
                                      IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Command="{Binding Command}"
                                      Width="{TemplateBinding Width}"
                                      Height="{TemplateBinding Height}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Background="{TemplateBinding Background}"
                                      Content="{Binding Name}"
                                      Style="{DynamicResource DataTabToggleButtonStyle}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"/>
                        <!-- Visual State Logic Replaced by Triggers -->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="MenuItem" Property="Background"
                                    Value="{DynamicResource WeakAccentBackgroundBrush}" />
                            <Setter TargetName="MenuItem" Property="Margin"
                                    Value="0,0,-1,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MenuItem" Property="Background"
                                    Value="{DynamicResource HoverOverlayBrush}" />
                            
                            <Setter TargetName="MenuItem" Property="Margin"
                                    Value="0,0,-1,0"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="MenuItem" Property="Background"
                                    Value="{DynamicResource BackgroundBrush}" />
                            <Setter TargetName="MenuItem" Property="Margin"
                                    Value="0,0,-15,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataTabToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock x:Name="TextBlock"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Margin="0" HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>